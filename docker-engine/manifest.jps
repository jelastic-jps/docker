type: install
id: docker-engine-ce
baseUrl: https://raw.githubusercontent.com/jelastic-jps/docker/clustering-1.1/docker-engine
description:
  text: /text/description.md
  short: Automatic Installation of Docker Engine (CE) as a Standalone or Worker Node
categories:
  - apps/dev-and-admin-tools

logo: ../images/docker-engine-logo-2.png
name: Docker Engine CE
targetRegions:
  type: vz7

globals:                                                                                                                                                                                                                         
  startPage: http://${env.domain}/   
  port: 4848
 
settings: 
  fields:  
  - type: nodetags      
    nodeType: dockerengine
    caption: Docker Version
    name: tag  
    width: 165
  - name: mode
    type: radio-fieldset
    values:
      clean: Create a clean standalone engine
      deploy: Deploy containers from compose.yml
      swarm-join: Connect to an existing swarm cluster
    default: clean
    showIf:
      deploy:
      - name: repo
        type: string
        caption: Compose Repo
        default: https://github.com/vegasbrianc/docker-compose-demo.git
        required: true
        vtype: url
      - name: role
        type: string
        default: cp
        inputType: hidden
      swarm-join:
      - name: role
        type: list
        caption: Role
        values:
          cp: Manager
          worker: Worker
        default: worker
        required: true
      - name: token
        type: string
        caption: Token
        default: ''
        required: true
      - name: host
        type: string
        caption: Host IP
        default: ''
        required: true
        regex: "^(?=\\d+\\.\\d+\\.\\d+\\.\\d+$)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.?){4}$"
        regexText: Invalid IP address format
      clean:
      - name: portainer
        type: checkbox
        caption: Install <a href='https://portainer.io' target='_blank'>Portainer UI</a> and Let's Encrypt SSL certificates
        value: false
      - name: role
        type: string
        default: cp
        inputType: hidden
  
nodes:
- count: 1
  cloudlets: 32
  nodeType: dockerengine
  tag: ${settings.tag}
  nodeGroup: ${settings.role}
  displayName: Engine Node
  env:
    JELASTIC_EXPOSE: false

skipNodeEmails: true
    
onInstall:
  - addExtIp
  - deploy
  - connect-to-swarm
  - portainer
  
onAfterScaleOut[${settings.role}]: connect-to-swarm

actions:
  deploy:
    if ('${settings.mode}' == 'deploy'):
      install:
        jps: ../addons/docker-deploy.jps
        settings:
          repo: ${settings.repo}
          type: compose
          
  connect-to-swarm:
    if ('${settings.mode}' == 'swarm-join'):
    - sleep: 10000
    - if (event && event.response && !event.response.nodes):
        swarm-join:
          filter: ${settings.role}
    - if (event && event.response && event.response.nodes):
        forEach(event.response.nodes):
          swarm-join:
            filter: ${@i.id}
    - else:
        forEach(env.nodes):
          swarm-join:
            filter: ${@i.id}
            
  swarm-join:
  - cmd[${this.filter}]: docker swarm join --token ${settings.token} ${settings.host}:2377
  - if ('${settings.role}' == 'cp'):
      setNodeDisplayName[${this.filter}]: Manager
    if ('${settings.role}' == 'worker'):
      setNodeDisplayName[${this.filter}]: Worker
    
  portainer:
    if ('${settings.portainer}' == 'true'):
      - install:
          jps: ../addons/portainer.jps?_r=${fn.random}
          settings:
            mode: engine
            port: ${globals.port}
      - setGlobals:
          startPage: https://${env.domain}:${globals.port}/

  addExtIp:
    if ('${settings.role}' == 'cp'):
      script: ../addons/scripts/attach-external-ip.js?_r=${fn.random}

startPage: ${globals.startPage}
 
success: /text/success.md
